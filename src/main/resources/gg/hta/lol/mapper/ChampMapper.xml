<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gg.hta.lol.mapper.ChampMapper">
    <insert id="insertChamp"
            parameterType="gg.hta.lol.vo.ChampionVo">
        insert into champion
        values (#{championid},
                #{name},
                0,
                0,
                0,
                0,
                #{picture},
                #{skillP_icon},
                #{skillP_info},
                #{skillQ_icon},
                #{skillQ_info},
                #{skillW_icon},
                #{skillW_info},
                #{skillE_icon},
                #{skillE_info},
                #{skillR_icon},
                #{skillR_info},
                #{story},
                'null')
    </insert>
    <delete id="deleteChamp">
        delete
        from champion
    </delete>
    <select id="ChampAll_List" resultType="gg.hta.lol.vo.ChampionVo">
        select *
        from champion
        order by name
    </select>
    <select id="selectList" parameterType="int"
            resultType="gg.hta.lol.vo.ChampionVo">
        select *
        from champion
        where championid = #{championid}
    </select>
    <select id="matchCount" parameterType="int" resultType="int">
        select nvl(round(max((select pickcount
                              from champion
                              where championid = #{championid})) / (count(matchid) / 2) * 100), 0)
        from teaminfo
    </select>
    <select id="banCount" parameterType="int" resultType="int">
        select nvl(round(max((select bancount
                              from champion
                              where championid = #{championid})) / (count(matchid) / 2) * 100), 0)
        from teaminfo
    </select>
    <select id="wincount" parameterType="int" resultType="int">
        select round(nvl((wincount * 100) / decode(pickcount, 0, null, pickcount), 0))
        from champion
        where championid = #{championid}
    </select>
    <select id='allCount' parameterType="int" resultType="hashmap">
        select max((select count(championid) from champion)) maxcount
             , count(matchid) / 2                            matchCount
             , max((select bancount
                    from champion
                    where championid = #{championid}))       banCount
             , max((select pickcount
                    from champion
                    where championid = #{championid}))       pickCount
             , max((select wincount
                    from champion
                    where championid = #{championid}))       winCount
        from teaminfo
    </select>
    <select id="maxCount" parameterType="int" resultType="hashmap">
        select ccb.*
        from (
                 select cc.*, ROW_number() over (order by cc.pickper desc) rank
                 from (
                          select distinct bb.name, bb.pickper, bb.championid, bb.picture, bb.pickcount
                          from (
                                   select round((pickcount) / (select count(matchid) from matchinfo) * 100) pickper,
                                          name,
                                          champion.championid,
                                          champion.picture,
                                          champion.pickcount
                                   from teammemberinfo
                                            inner join champion on champion.championid = teammemberinfo.championid
                                   where champion.bancount > 3) bb) cc
             ) ccb
        where championid = #{championid}
    </select>
    <select id="banrank" parameterType="int" resultType="hashmap">
        select ccb.*
        from (
                 select cc.*, ROW_number() over (order by cc.banper desc) rank
                 from (
                          select distinct bb.name, bb.banPer, bb.championid, bb.picture, bb.bancount
                          from (
                                   select round((bancount / 2) / (select count(matchid) from matchinfo) * 100) banPer,
                                          name,
                                          champion.championid,
                                          champion.picture,
                                          champion.bancount
                                   from teammemberinfo
                                            inner join champion on champion.championid = teammemberinfo.championid
                                   where champion.bancount > 3) bb) cc) ccb
        where championid = #{championid}
    </select>
    <select id="winrank" parameterType="int" resultType="hashmap">
        select ccb.*
        from (
                 select aa.*
                 from (
                          (select picture,
                                  name,
                                  championid,
                                  round(nvl((wincount) / decode(pickcount, 0, null, pickcount), 0) * 100)                       winrank,
                                  ROW_NUMber() over (order by round(
                                          nvl((wincount * 100) / decode(pickcount, 0, null, pickcount), 0)) desc,wincount desc) rank
                           from champion
                           where pickcount > 3)) aa) ccb
        where championid = #{championid}
    </select>

    <select id='pickrank' resultType="hashmap">


        select cc.*, ROW_number() over (order by cc.pickper desc) rank
        from (
                 select distinct bb.name, bb.pickper, bb.championid, bb.picture, bb.pickcount
                 from (
                          select round((pickcount) / (select count(matchid) from matchinfo) * 100) pickper,
                                 name,
                                 champion.championid,
                                 champion.picture,
                                 champion.pickcount
                          from teammemberinfo
                                   inner join champion on champion.championid = teammemberinfo.championid
                          where champion.bancount > 3) bb) cc
	<![CDATA[
        where rownum < 60
        ]]>

    </select>
    <select id='itemtree' resultType="hashmap" parameterType="int">

        select a.*
        from (
              (select spell2,
                      spell1,
                      item1,
                      item2,
                      item3,
                      item4,
                      item5,
                      item6,
                      rune1,
                      rune2,
                      row_number() over (order by item1 desc) rank
               from teammemberinfo
                        inner join champion on
                   champion.championid = teammemberinfo.championid
                        inner join teaminfo on teammemberinfo.matchid = teaminfo.matchid
               where champion.championid = #{championid}
                 and teaminfo.WINLOSE = 'Win'
               group by item1, item2, item3, item4, item5, item6, spell1, spell2, rune1, rune2) a)
        where <![CDATA[
           rank < 6
        ]]>


    </select>

    <select id='banlistAll' resultType="hashmap">


        select cc.*, ROW_number() over (order by cc.banper desc) rank
        from (
                 select distinct bb.name, bb.banPer, bb.championid, bb.picture, bb.bancount
                 from (
                          select round((bancount / 2) / (select count(matchid) from matchinfo) * 100) banPer,
                                 name,
                                 champion.championid,
                                 champion.picture,
                                 champion.bancount
                          from teammemberinfo
                                   inner join champion on champion.championid = teammemberinfo.championid
                          where champion.bancount > 3) bb) cc
	<![CDATA[
        where rownum < 60
        ]]>
    </select>

    <select id='winlistAll' resultType="hashmap">


        select aa.*
        from (
                 (select picture,
                         name,
                         championid,
                         round(nvl((wincount) / decode(pickcount, 0, null, pickcount), 0) * 100)                       winrank,
                         ROW_NUMber() over (order by round(
                                 nvl((wincount * 100) / decode(pickcount, 0, null, pickcount), 0)) desc,wincount desc) rank
                  from champion
                  where pickcount > 3)) aa
		<![CDATA[
        where rownum < 60
        ]]>

    </select>

    <select id="getChampionidOfWinning" parameterType="int" resultType="String">
		<![CDATA[
        SELECT tm.championid
        FROM teammemberinfo tm,
             teaminfo ti
        WHERE tm.matchid = ti.matchid
          AND tm.teamid = ti.teamid
          AND ti.winlose = 'Win'
          AND tm.matchid IN (
            SELECT matchid
            FROM teammemberinfo
            WHERE championid = #{championid}
        )
        ]]>
	</select>

    <select id="getChampionidTogether" parameterType="int" resultType="gg.hta.lol.joinvo.championidTogetherVo">
		<![CDATA[
        SELECT tm.championid,
               ti.WINLOSE
        FROM teammemberinfo tm,
             teaminfo ti
        WHERE tm.matchid = ti.matchid
          AND tm.teamid = ti.teamid
          AND tm.matchid IN (
            SELECT matchid
            FROM teammemberinfo
            WHERE championid = #{championid}
        )
        ]]>
	</select>

    <select id="getWinningSetting" parameterType="int" resultType="gg.hta.lol.joinvo.WinningSettingVo">
        SELECT tm.item1,
               TM.ITEM2,
               TM.ITEM3,
               TM.ITEM4,
               TM.ITEM5,
               TM.ITEM6,
               tm.spell1,
               TM.SPELL2,
               TM.RUNE1,
               TM.RUNE2
        FROM teammemberinfo tm,
             teaminfo ti
        WHERE tm.matchid = ti.matchid
          AND tm.teamid = ti.teamid
          /*AND ti.winlose = 'Win'*/
          AND tm.championid = #{championid}
    </select>

    <select id="getWinloseRuntime" parameterType="int" resultType="gg.hta.lol.joinvo.WinloseRuntimeVo">
        select
            ti.winlose,
            mi.runtime
        from
            teammemberinfo tm, teaminfo ti, matchinfo mi
        where
            tm.matchid = ti.matchid AND
            tm.teamid = ti.teamid and
            tm.matchid = mi.matchid and
            tm.championid = #{championid}
    </select>

    <select id="getChampionRank" parameterType="int" resultType="hashmap">
        select
            snickname, count(championid) as count
        from
            teammemberinfo
        where
            championid = #{championid}
        group by
            snickname
        order by
            count(championid) desc
    </select>

    <select id="getChampionRankerItemList" parameterType="hashmap" resultType="gg.hta.lol.vo.OnlyItemVo">
        select
            item1, item2, item3, item4, item5, item6
        from
            teammemberinfo
        where
            snickname = #{snickname} and
            championid = #{championid}
    </select>

    <select id="getWinloseCountByTier" parameterType="hashmap" resultType="int">
        select
            count(*) as count
        from
            queueinfo qi, teaminfo ti, teammemberinfo tm
        where
            queuetype = 'RANKED_SOLO_5x5' and
            qi.tier like '%'||#{tier}||'%' and
            tm.championid = #{championid} and
            ti.winlose = #{winlose} and
            tm.matchid = ti.matchid AND
            tm.teamid = ti.teamid and
            qi.snickname = tm.snickname
    </select>

</mapper>